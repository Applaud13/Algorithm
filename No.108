function solution(n) {
    var answer = [];
    let triangle = [];
    for(let i=0; i<n; i++){
        triangle[i] = []
    }

    let time = 0;
    let k = 0;
    let number = 0;
    while(n*(n+1)/2 - number){
        // 위에서 왼쪽 아래로
        for(let i=0; i<n-1-time*3; i++){
            triangle[i + time * 2][time] = ++number;
        }

        // 왼쪽 아래에서 오른쪽 아래로
        for(let i=0; i<n-1-time*3; i++){
            triangle[n - time - 1][i +time] = ++number;
        }

        // 오른쪽 아래에서 위쪽으로
        for(let i=0; i<n-1-time*3; i++){
            triangle[n - time - 1 - i][n - time * 2 - 1 - i] = ++number;
        }
        time++;
        if(time === Math.ceil(n / 3)){
            break;
        }
        k = triangle[time*2 - 1][time];
    }   

    // 가운데 채우기
    if(n % 3 ===1){
        triangle[Math.floor(n / 3) * 2][Math.floor(n / 3)] = ++number;
    }
    
    for(let i=0; i<triangle.length; i++){
        for(let x=0; x<triangle[i].length; x++){
            answer.push(triangle[i][x]);
        }
    }
    
    return answer;
}


