const split = (square) => {
    const long = square.length;
    // 모든 요소가 0 or 1일 경우 return
    for(let x=0; x<long; x++){
        for(let y=0; y<long; y++){
            if(square[x][y] !== square[0][0]){
                x = 1025;
                break;
            }
        }
        if(x === long - 1){
            return [square[0][0], long*long - 1];
        }
    }
    
    // square를 4개로 쪼개서 split 4번 시행
    let splitsquare = [];
    let value = [0, 0];
    for(let x=0; x < long/2; x++){
        let temp = [];
        for(let y=0; y < long/2; y++){
            temp.push(square[x][y]);
        }
        splitsquare.push(temp);
    }
    value[0] += split(splitsquare)[0];
    value[1] += split(splitsquare)[1];
    
    splitsquare = [];
    for(let x=long/2; x < long; x++){
        let temp = [];
        for(let y=0; y < long/2; y++){
            temp.push(square[x][y]);
        }
        splitsquare.push(temp);
    }
    value[0] += split(splitsquare)[0];
    value[1] += split(splitsquare)[1];
    
    splitsquare = [];
    for(let x=0; x < long/2; x++){
        let temp = [];
        for(let y=long/2; y < long; y++){
            temp.push(square[x][y]);
        }
        splitsquare.push(temp);
    }
    value[0] += split(splitsquare)[0];
    value[1] += split(splitsquare)[1];
    
    splitsquare = [];
    for(let x=long/2; x < long; x++){
        let temp = [];
        for(let y=long/2; y < long; y++){
            temp.push(square[x][y]);
        }
        splitsquare.push(temp);
    }
    value[0] += split(splitsquare)[0];
    value[1] += split(splitsquare)[1];
    
    return value;
}

function solution(arr) {
    const long = arr.length ** 2;
    const x = split(arr)
    return [long - x[0] - x[1], x[0]];
}
