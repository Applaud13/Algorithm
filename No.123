const TowerMove = (temp, n) => {
    // 깊은 복사
    let temp1 = temp.map(item => [...item]);
    let temp2 = temp.map(item => [...item]);
    
    // 2,3 기둥 위치 교환해서 n-1 실행
    for (let i = 0; i < temp1.length; i++) {
        if (temp1[i][0] === 2) {
            temp1[i][0] = 3;
        } else if (temp1[i][0] === 3) {
            temp1[i][0] = 2;
        }
        if (temp1[i][1] === 2) {
            temp1[i][1] = 3;
        } else if (temp1[i][1] === 3) {
            temp1[i][1] = 2;
        }
    }
    
    // 제일 높은 숫자 3번 최하단으로 보내기
    temp1.push([1, 3]);
    
    // 1,2 기둥 위치 교환해서 n-1 실행
    for (let i = 0; i < temp2.length; i++) {
        if (temp2[i][0] === 1) {
            temp2[i][0] = 2;
        } else if (temp2[i][0] === 2) {
            temp2[i][0] = 1;
        }
        if (temp2[i][1] === 1) {
            temp2[i][1] = 2;
        } else if (temp2[i][1] === 2) {
            temp2[i][1] = 1;
        }
    }
    temp1.push(...temp2);
    
    return temp1;
}

function solution(n) {
    let temp = [];
    for (let i = 1; i < n + 1; i++) {
        temp = TowerMove(temp, i);
    }
    
    return temp;
}
